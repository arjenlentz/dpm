PRACTICE:

DONE ### set libevent to listen on socket with callback, accept sockets.
DONE ### signal ignore sigpipe
DONE ### handle reading data on socket, printing locally.
DONE ### handle SIGHUP
DONE ### handle writing data back to socket
NAH  ### try basic ragel implementation to handle reading/writing commands
WORK # embed lua; pass input commands to lua, allow callback to set config vars
WORK ## proper read/write buffering for event sockets.
outbound connection support. non-block connect()
look up TCP options.. SO_KEEPALIVE, SO_LINGER, etc
see about implementing mysql protocol (as a server)
see about working mysql protocol (as a client)
(how much can be done in lua? perhaps?)
more libevent infrastructure; timers, buffering
memory management; caching connection shit. malloc big range. reuse buffers.
use multiple .c files to make the program.
write a makefile
readv/writev for read/write iovecs? learn how to use scatter/gather
use iovecs or custom buffer for buffering?
